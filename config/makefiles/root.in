## $Id$

## arguments we want to run parrot with
PARROT_ARGS   :=

## configuration settings
VERSION       := @versiondir@
BIN_DIR       := @bin_dir@
LIB_DIR       := @lib_dir@$(VERSION)
DOC_DIR       := @doc_dir@$(VERSION)
MANDIR        := @mandir@$(VERSION)

# Set up extensions
LOAD_EXT      := @load_ext@
O             := @o@

# Various paths
PERL6GRAMMAR  := $(LIB_DIR)/library/PGE/Perl6Grammar.pbc
NQP           := $(LIB_DIR)/languages/nqp/nqp.pbc
PCT           := $(LIB_DIR)/library/PCT.pbc
PMC_DIR       := src/pmc
OPS_DIR       := src/ops

## Setup some commands
MAKE          := @make_c@
PERL          := @perl@
CAT           := @cat@
CHMOD         := @chmod@
CP            := @cp@
MKPATH        := @mkpath@
RM_F          := @rm_f@
RM_RF         := @rm_rf@
POD2MAN       := pod2man
#IF(parrot_is_shared and not(cygwin or win32)):export LD_RUN_PATH := @blib_dir@:$(LD_RUN_PATH)
PARROT        := $(BIN_DIR)/parrot@exe@
PBC_TO_EXE    := $(BIN_DIR)/pbc_to_exe@exe@
#IF(darwin):
#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@

STEME_GROUP := $(PMC_DIR)/steme_group$(LOAD_EXT)
STEME_OPS := $(OPS_DIR)/steme_ops$(LOAD_EXT)

#PMC_DEPS := config/makefiles/pmc.in $(PMC_DIR)/steme.pmc
#OPS_DEPS := config/makefiles/ops.in $(OPS_DIR)/steme.ops

SOURCES := \
  src/gen_grammar.pir \
  src/gen_actions.pir \
  src/gen_builtins.pir \
  steme.pir

BUILTINS_PIR := \
  src/builtins/say.pir \
  src/builtins/math.pir \
  src/builtins/cmp.pir

DOCS := README

BUILD_CLEANUPS := \
  steme.pbc \
  "src/gen_*.pir" \
  "*.c" \
  "*$(O)" \
  steme@exe@ \
#IF(win32):  parrot-steme.exe \
#IF(win32):  parrot-steme.iss \
#IF(win32):  "setup-parrot-*.exe" \
  installable_steme@exe@

TEST_CLEANUPS :=

# the default target
build: \
  $(STEME_OPS) \
  $(STEME_GROUP) \
  steme.pbc

all: build steme@exe@ installable

steme.pbc: $(SOURCES)
	$(PARROT) $(PARROT_ARGS) -o steme.pbc steme.pir

steme@exe@: steme.pbc
	$(PBC_TO_EXE) steme.pbc

src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg src/parser/grammar-oper.pg
	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
	    --output=src/gen_grammar.pir \
	    src/parser/grammar.pg \
	    src/parser/grammar-oper.pg

src/gen_actions.pir: $(NQP) src/parser/actions.pm
	$(PARROT) $(PARROT_ARGS) $(NQP) --output=src/gen_actions.pir \
	    --target=pir src/parser/actions.pm

src/gen_builtins.pir: $(BUILTINS_PIR)
	$(CAT) $(BUILTINS_PIR) > src/gen_builtins.pir

$(STEME_GROUP): $(PMC_DEPS)
#	$(MAKE) $(PMC_DIR)

$(STEME_OPS): $(OPS_DEPS)
#	$(MAKE) $(OPS_DIR)

installable: installable_steme@exe@

installable_steme@exe@: steme.pbc
	$(PBC_TO_EXE) steme.pbc --install

Makefile: config/makefiles/root.in
	$(PERL) Configure.pl

# This is a listing of all targets, that are meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  build:             steme.pbc"
	@echo "                     This is the default."
	@echo "  steme@exe@      Self-hosting binary not to be installed."
	@echo "  all:               steme.pbc steme@exe@ installable"
	@echo "  installable:       Create libs and self-hosting binaries to be installed."
	@echo "  install:           Install the installable targets and docs."
	@echo ""
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  test-installable:  Test self-hosting targets."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
	@echo "  distclean:         Removes also anything built, in theory"
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

test: build
	$(PERL) -I$(LIB_DIR)/tools/lib t/harness --bindir=$(BIN_DIR)

# basic run for missing libs
test-installable: installable
	echo "1" | ./installable_steme@exe@

install: installable
#	$(MAKE) $(OPS_DIR) install
#	$(MAKE) $(PMC_DIR) install
	$(CP) installable_steme@exe@ $(BIN_DIR)/parrot-steme@exe@
	$(CHMOD) 0755 $(BIN_DIR)/parrot-steme@exe@
	-$(MKPATH) $(LIB_DIR)/languages/steme
	$(CP) steme.pbc $(LIB_DIR)/languages/steme/steme.pbc
#	-$(MKPATH) $(MANDIR)/man1
#	$(POD2MAN) doc/running.pod > $(MANDIR)/man1/parrot-steme.1
#	-$(MKPATH) $(DOC_DIR)/languages/steme
#	$(CP) $(DOCS) $(DOC_DIR)/languages/steme

uninstall:
#	$(MAKE) $(OPS_DIR) uninstall
#	$(MAKE) $(PMC_DIR) uninstall
	$(RM_F) $(BIN_DIR)/parrot-steme@exe@
	$(RM_RF) $(LIB_DIR)/languages/steme
#	$(RM_F) $(MANDIR)/man1/parrot-steme.1
#	$(RM_RF) $(DOC_DIR)/languages/steme

win32-inno-installer: installable
#	-$(MKPATH) man/man1
#	$(POD2MAN) doc/running.pod > man/man1/parrot-steme.1
#	-$(MKPATH) man/html
#	pod2html --infile doc/running.pod --outfile man/html/parrot-steme.html
	$(CP) installable_steme@exe@ parrot-steme.exe
	$(PERL) $(LIB_DIR)/tools/dev/mk_inno_language.pl steme
	iscc parrot-steme.iss

testclean:
	$(RM_F) $(TEST_CLEANUPS)

clean:
#	$(MAKE) $(OPS_DIR) clean
#	$(MAKE) $(PMC_DIR) clean
	$(RM_F) $(TEST_CLEANUPS) $(BUILD_CLEANUPS)

realclean:
#	$(MAKE) $(OPS_DIR) realclean
#	$(MAKE) $(PMC_DIR) realclean
	$(RM_F) $(TEST_CLEANUPS) $(BUILD_CLEANUPS) Makefile

distclean: realclean

# Local variables:
#   mode: makefile
# End:
# vim: ft=make:

